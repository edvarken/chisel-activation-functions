package DyT
import chisel3._
import chisel3.util._

class DyTLUT extends Module {
  val io = IO(new Bundle {
    val indexIn = Input(UInt(7.W))  // 7-bit index
    val valueOut = Output(UInt(16.W)) // BF16 output
  })

  val lut = VecInit(Seq(   // indices 0 to 127
    "b0000000000000000".U, // index 0: 0000000
    "b0011110101111111".U,
    "b0011110111111110".U,
    "b0011111000111101".U,
    "b0011111001111010".U,
    "b0011111010011010".U,
    "b0011111010110111".U,
    "b0011111011010010".U,
    "b0011111011101100".U,
    "b0011111100000010".U,
    "b0011111100001101".U,
    "b0011111100011000".U,
    "b0011111100100010".U,
    "b0011111100101011".U,
    "b0011111100110100".U,
    "b0011111100111011".U,
    "b0011111101000010".U,
    "b0011111101001001".U,
    "b0011111101001111".U,
    "b0011111101010100".U,
    "b0011111101011001".U,
    "b0011111101011101".U,
    "b0011111101100001".U,
    "b0011111101100100".U,
    "b0011111101100111".U,
    "b0011111101101010".U,
    "b0011111101101100".U,
    "b0011111101101111".U,
    "b0011111101110000".U,
    "b0011111101110010".U,
    "b0011111101110100".U,
    "b0011111101110101".U,
    "b0011111101110110".U, // index 32
    "b0011111101110111".U,
    "b0011111101111000".U,
    "b0011111101111001".U,
    "b0011111101111010".U,
    "b0011111101111011".U,
    "b0011111101111011".U,
    "b0011111101111100".U,
    "b0011111101111100".U,
    "b0011111101111100".U,
    "b0011111101111101".U,
    "b0011111101111101".U,
    "b0011111101111101".U,
    "b0011111101111110".U,
    "b0011111101111110".U,
    "b0011111101111110".U,
    "b0011111101111110".U,
    "b0011111101111110".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b0011111101111111".U,
    "b1000000000000000".U, // index 64: 1000000: should give DyT value of -0
    "b1011110101111111".U, // index 65: 1000001: should give DyT value of -0.062256
    "b1011110111111110".U,
    "b1011111000111101".U,
    "b1011111001111010".U,
    "b1011111010011010".U,
    "b1011111010110111".U,
    "b1011111011010010".U,
    "b1011111011101100".U,
    "b1011111100000010".U,
    "b1011111100001101".U,
    "b1011111100011000".U,
    "b1011111100100010".U,
    "b1011111100101011".U,
    "b1011111100110100".U,
    "b1011111100111011".U,
    "b1011111101000010".U,
    "b1011111101001001".U,
    "b1011111101001111".U,
    "b1011111101010100".U,
    "b1011111101011001".U,
    "b1011111101011101".U,
    "b1011111101100001".U,
    "b1011111101100100".U,
    "b1011111101100111".U,
    "b1011111101101010".U,
    "b1011111101101100".U,
    "b1011111101101111".U,
    "b1011111101110000".U,
    "b1011111101110010".U,
    "b1011111101110100".U,
    "b1011111101110101".U,
    "b1011111101110110".U,
    "b1011111101110111".U,
    "b1011111101111000".U,
    "b1011111101111001".U,
    "b1011111101111010".U,
    "b1011111101111011".U,
    "b1011111101111011".U,
    "b1011111101111100".U,
    "b1011111101111100".U,
    "b1011111101111100".U,
    "b1011111101111101".U,
    "b1011111101111101".U,
    "b1011111101111101".U,
    "b1011111101111110".U,
    "b1011111101111110".U,
    "b1011111101111110".U,
    "b1011111101111110".U,
    "b1011111101111110".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,
    "b1011111101111111".U,  // index 127: 1111111 (this is -3.9375): should give DyT value of -0.99609375
  ))
  io.valueOut := lut(io.indexIn)
}
